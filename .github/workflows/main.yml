name: CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - 'README.md'
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('package-lock.json', 'package.json', '.github/workflows/main.yml') }}
      - name: Install
        run: npm ci
      - name: Build
        run: npm run build

  install-dependencies:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('package-lock.json', 'package.json', '.github/workflows/main.yml') }}
      - name: Install
        run: npm ci

  lintcheck:
    name: Lint Check
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('package-lock.json', 'package.json', '.github/workflows/main.yml') }}
      - name: Install
        run: npm ci
      - name: Format Lint
        run: npm run formatcheck
      - name: Lint
        run: npm run lintcheck

  unit-test:
    name: Unit Tests
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('package-lock.json', 'package.json', '.github/workflows/main.yml') }}
      - name: Install
        run: npm ci
      - name: Run all tests
        run: npm run test

  integration-test:
    name: Integration Tests
    needs: install-dependencies
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.1
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('package-lock.json', 'package.json', '.github/workflows/main.yml') }}
      - name: Install
        run: npm ci
      - name: Run all tests
        run: npm run test:e2e

  typecheck:
    name: Check Types
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('package-lock.json', 'package.json', '.github/workflows/main.yml') }}
      - name: Install
        run: npm ci
      - name: Typecheck
        run: npm run typecheck
